package com.akihabara.market.view;

import com.akihabara.market.model.ProductoOtaku;
import java.util.InputMismatchException;
import java.util.List;
import java.util.Scanner;
import com.akihabara.market.util.InputUtils;

public class InterfazConsola {
    private Scanner scanner = new Scanner(System.in);

    public void mostrarMenu() {
        System.out.println("\n--- Menú Principal ---");
        System.out.println("1. Añadir producto");
        System.out.println("2. Consultar producto por ID");
        System.out.println("3. Listar todos los productos");
        System.out.println("4. Listar productos por nombre");
        System.out.println("5. Listar productos por categoría");
        System.out.println("6. Actualizar producto");
        System.out.println("7. Eliminar producto");
        System.out.println("8. Salir");
        System.out.print("Seleccione una opción: ");
    }

    public int leerOpcion() {
        while (true) {
            try {
                return Integer.parseInt(scanner.nextLine().trim());
            } catch (NumberFormatException e) {
                System.out.print("Opción no válida. Intente de nuevo: ");
            }
        }
    }

    public ProductoOtaku leerDatosProducto() {
        String nombre = scanner.nextLine("Nombre del producto: ");
        String categoria = leerTexto("Categoría: ");
        double precio = leerDouble("Precio: ");
        int stock = leerEntero("Stock: ");

        return new ProductoOtaku(nombre, categoria, precio, stock);
    }

    public ProductoOtaku leerDatosProductoConId() {
        int id = leerEntero("ID del producto a actualizar: ");
        ProductoOtaku p = leerDatosProducto();
        p.setId(id);
        return p;
    }

    public int pedirIdProducto() {
        return leerEntero("Ingrese el ID del producto: ");
    }

    public String pedirNombreProducto() {
        return leerTexto("Ingrese el nombre del producto a buscar: ");
    }

    public String pedirCategoriaProducto() {
        return leerTexto("Ingrese la categoría a buscar: ");
    }

    public void mostrarProducto(ProductoOtaku producto) {
        if (producto == null) {
            System.out.println("Producto no encontrado.");
        } else {
            System.out.println("Producto encontrado:");
            System.out.println(producto);
        }
    }

    public void mostrarProductos(List<ProductoOtaku> productos) {
        if (productos.isEmpty()) {
            System.out.println("No se encontraron productos.");
        } else {
            System.out.println("Productos encontrados:");
            for (ProductoOtaku p : productos) {
                System.out.println(p);
            }
        }
    }

    public void mostrarMensaje(String mensaje) {
        System.out.println(mensaje);
    }
}
